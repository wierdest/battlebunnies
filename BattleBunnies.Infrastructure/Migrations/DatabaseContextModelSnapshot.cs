// <auto-generated />
using System;
using BattleBunnies.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BattleBunnies.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BattleBunnies.Domain.Aggregates.Battle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CurrentTurn")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("BattleBunnies.Domain.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ConfirmedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BattleBunnies.Domain.Entities.Bunny", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BattleId")
                        .HasColumnType("uuid");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BattleId");

                    b.ToTable("Bunnies");
                });

            modelBuilder.Entity("BattleBunnies.Infrastructure.Persistence.Battles.BattleOwner", b =>
                {
                    b.Property<Guid>("BattleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("BattleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("BattleOwner");
                });

            modelBuilder.Entity("BattleBunnies.Domain.Aggregates.User", b =>
                {
                    b.OwnsOne("BattleBunnies.Domain.Entities.Wallet", "Wallet", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("BattleBunnies.Domain.ValueObjects.Balance", "Balance", b2 =>
                                {
                                    b2.Property<Guid>("WalletUserId")
                                        .HasColumnType("uuid");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("numeric");

                                    b2.HasKey("WalletUserId");

                                    b2.ToTable("Users");

                                    b2.WithOwner()
                                        .HasForeignKey("WalletUserId");
                                });

                            b1.Navigation("Balance")
                                .IsRequired();
                        });

                    b.Navigation("Wallet")
                        .IsRequired();
                });

            modelBuilder.Entity("BattleBunnies.Domain.Entities.Bunny", b =>
                {
                    b.HasOne("BattleBunnies.Domain.Aggregates.Battle", null)
                        .WithMany("Bunnies")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("BattleBunnies.Domain.ValueObjects.Position", "Position", b1 =>
                        {
                            b1.Property<Guid>("BunnyId")
                                .HasColumnType("uuid");

                            b1.Property<int>("X")
                                .HasColumnType("integer");

                            b1.Property<int>("Y")
                                .HasColumnType("integer");

                            b1.HasKey("BunnyId");

                            b1.ToTable("Bunnies");

                            b1.WithOwner()
                                .HasForeignKey("BunnyId");
                        });

                    b.Navigation("Position")
                        .IsRequired();
                });

            modelBuilder.Entity("BattleBunnies.Infrastructure.Persistence.Battles.BattleOwner", b =>
                {
                    b.HasOne("BattleBunnies.Domain.Aggregates.Battle", "Battle")
                        .WithMany()
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleBunnies.Domain.Aggregates.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BattleBunnies.Domain.Aggregates.Battle", b =>
                {
                    b.Navigation("Bunnies");
                });
#pragma warning restore 612, 618
        }
    }
}
